#include <sys/types.h>
#include <sys/socket.h>
#include <stdio.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>

#define MAX 100

void deservire(int c)
{
        char sir[MAX];
        recv(c, sir, sizeof(sir), MSG_WAITALL);

        char ogl[MAX];

        int i  = 0, j = strlen(sir) - 1;
        for(; j >= 0; i++, j--)
                ogl[i] = sir[j];

        send(c, ogl, strlen(ogl), MSG_WAITALL);


        close(c);
}

int main(int argc, char** argv)
{

  int s;
  struct sockaddr_in server, client;
  int c, l;

  s = socket(AF_INET, SOCK_STREAM, 0);
  if (s < 0) {
    printf("Eroare la crearea socketului server\n");
    return 1;
  }

  memset(&server, 0, sizeof(server));
  server.sin_port = htons(atoi(argv[1]));
  server.sin_family = AF_INET;
  server.sin_addr.s_addr = INADDR_ANY;

  if (bind(s, (struct sockaddr *) &server, sizeof(server)) < 0) {
    printf("Eroare la bind\n");
    return 1;
  }

  listen(s, 5);

  l = sizeof(client);
  memset(&client, 0, sizeof(client));

  while (1) {
    c = accept(s, (struct sockaddr *) &client, &l);
    printf("S-a conectat un client.\n");
    // deservirea clientului
    if(fork() == 0)
    {
        deservire(c);
        return 0;
    }
    // sfarsitul deservirii clientului;
  }
}
