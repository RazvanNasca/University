#include <sys/types.h>
#include <sys/socket.h>
#include <stdio.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>


void deservire_client(int c) {

  // deservirea clientului
  uint16_t nr, port, cnt = 0;

  recv(c, &nr, sizeof(nr), MSG_WAITALL);
  recv(c, &port, sizeof(port), MSG_WAITALL);

  nr = ntohs(nr);
  port = ntohs(port);
        ///printf("Numarul  din server %hu", nr);
  int i;
  for(i = 1; i <= nr; i++)
        if(nr % i == 0)
                cnt++;

  cnt = htons(cnt);
  send(c, &cnt, sizeof(cnt), 0);

  close(c);
  // sfarsitul deservirii clientului;
}

int main(int argc, char** argv) {
  int s;
  struct sockaddr_in server, client;
  int c, l;

  s = socket(AF_INET, SOCK_STREAM, 0);
  if (s < 0) {
    printf("Eroare la crearea socketului server\n");
    return 1;
  }

  memset(&server, 0, sizeof(server));
  server.sin_port = htons(atoi(argv[1]));
  server.sin_family = AF_INET;
  server.sin_addr.s_addr = INADDR_ANY;

  if (bind(s, (struct sockaddr *) &server, sizeof(server)) < 0) {
    printf("Eroare la bind\n");
    return 1;
  }

  listen(s, 5);

  l = sizeof(client);
  memset(&client, 0, sizeof(client));

  while (1) {

    c = accept(s, (struct sockaddr *) &client, &l);
    printf("S-a conectat un client.\n");
    if (fork() == 0) { // fiu
      deservire_client(c);
      return 0;
    }

  }
}
